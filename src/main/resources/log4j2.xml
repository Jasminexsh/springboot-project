<?xml version="1.0" encoding="UTF-8"?>
<!--日志级别以及优先级排序: OFF > FATAL > ERROR > WARN > INFO > DEBUG > TRACE > ALL -->
<!--Configuration后面的status，这个用于设置log4j2自身内部的信息输出，可以不设置，当设置成trace时，你会看到log4j2内部各种详细输出-->
<!--monitorInterval：Log4j能够自动检测修改配置 文件和重新配置本身，设置间隔秒数-->
<configuration status="WARN" monitorInterval="30">

    <!-- 集中配置属性进行管理 使用时通过：${name} -->
<!--    <properties>-->
<!--        <property name="LOG_HOME">D:/Download</property>-->
<!--    </properties>-->

    <!-- Logger -->
    <logger name="CTU-DIAGNOSE-STRATEGY" additivity="false">
        <level value="${springboot-project-loggingLevel}" />
        <appender-ref ref="CTU-DIAGNOSE-STRATEGY-APPENDER" />
    </logger>

    <!-- Appender -->
    <appender name="CTU-DIAGNOSE-STRATEGY-APPENDER"
              class="org.apache.logging.log4j.core.appender.RollingFileAppender">
        <param name="file"
               value="${loggingRoot}/${app_name}/diagnose/ctu-diagnose-strategy.log" />
        <param name="append" value="true" />
        <param name="encoding" value="GBK" />
        <param name="shouldAsync" value="false" />
        <param name="queueLength" value="256" />
        <param name="neverBlock" value="true" />
        <param name="softReference" value="true" />
        <param name="datePattern" value="'.'yyyy-MM-dd-HH" />
        <layout class="org.apache.log4j.PatternLayout">
            <param name="ConversionPattern" value="%d %-5p %m%n" />
        </layout>
    </appender>

    <!--日志处理器：先定义所有的appender-->

<!--    <appenders>-->
<!--        &lt;!&ndash;这个输出控制台的配置&ndash;&gt;-->
<!--        <console name="Console" target="SYSTEM_OUT">-->
<!--            &lt;!&ndash;输出日志的格式&ndash;&gt;-->
<!--            <PatternLayout pattern="[%d{HH:mm:ss:SSS}] [%p] - %l - %m%n"/>-->
<!--        </console>-->
<!--        &lt;!&ndash;文件会打印出所有信息，这个log每次运行程序会自动清空，-->
<!--            由append属性决定，这个也挺有用的，适合临时测试用  append="true" &ndash;&gt;-->
<!--        <File name="testFile" fileName="${LOG_HOME}/log/test.log">-->
<!--            <PatternLayout pattern="%d{HH:mm:ss.SSS} %-5level %class{36} %L %M - %msg%xEx%n"/>-->
<!--        </File>-->
<!--        &lt;!&ndash; 这个会打印出所有的info及以下级别的信息，每次大小超过size，-->
<!--            ${sys:user.home}/logs/info.log ==>C:\Users\用户名\logs-->
<!--            则这size大小的日志会自动存入按年份-月份建立的文件夹下面并进行压缩，作为存档&ndash;&gt;-->
<!--        <RollingFile name="RollingFileInfo" fileName="${LOG_HOME}/logs/info.log"-->
<!--                     filePattern="${LOG_HOME}/logs/$${date:yyyy-MM}/info-%d{yyyy-MM-dd}-%i.log">-->
<!--            &lt;!&ndash;日志级别过滤器，控制台只输出level及以上级别的信息（onMatch），其他的直接拒绝（onMismatch）&ndash;&gt;-->
<!--            <ThresholdFilter level="info" onMatch="ACCEPT" onMismatch="DENY"/>-->
<!--            &lt;!&ndash;日志消息格式&ndash;&gt;-->
<!--            <PatternLayout pattern="[%d{HH:mm:ss:SSS}] [%p] - %l - %m%n"/>-->
<!--            &lt;!&ndash;触发规则&ndash;&gt;-->
<!--            <Policies>-->
<!--                &lt;!&ndash;在系统启动时，触发拆分规则，生成一个新的日志文件&ndash;&gt;-->
<!--                <OnStartupTriggeringPolicy />-->
<!--                &lt;!&ndash;按照时间节点进行拆分 规则根据filePattern定义的&ndash;&gt;-->
<!--                <TimeBasedTriggeringPolicy/>-->
<!--                &lt;!&ndash;按照文件大小进行拆分&ndash;&gt;-->
<!--                <SizeBasedTriggeringPolicy size="100 MB"/>-->
<!--            </Policies>-->
<!--            &lt;!&ndash; DefaultRolloverStrategy属性如不设置，则默认为最多同一文件夹下7个文件，这里设置了20 &ndash;&gt;-->
<!--            <DefaultRolloverStrategy max="20"/>-->
<!--        </RollingFile>-->
<!--        <RollingFile name="RollingFileWarn" fileName="${LOG_HOME}/logs/warn.log"-->
<!--                     filePattern="${LOG_HOME}/logs/$${date:yyyy-MM}/warn-%d{yyyy-MM-dd}-%i.log">-->
<!--            <ThresholdFilter level="warn" onMatch="ACCEPT" onMismatch="DENY"/>-->
<!--            <PatternLayout pattern="[%d{HH:mm:ss:SSS}] [%p] - %l - %m%n"/>-->
<!--            <Policies>-->
<!--                <TimeBasedTriggeringPolicy/>-->
<!--                <SizeBasedTriggeringPolicy size="100 MB"/>-->
<!--            </Policies>-->
<!--            &lt;!&ndash; DefaultRolloverStrategy属性如不设置，则默认为最多同一文件夹下7个文件，这里设置了20 &ndash;&gt;-->
<!--            <DefaultRolloverStrategy max="20"/>-->
<!--        </RollingFile>-->
<!--        <RollingFile name="RollingFileError" fileName="${LOG_HOME}/logs/error.log"-->
<!--                     filePattern="${LOG_HOME}/logs/$${date:yyyy-MM}/error-%d{yyyy-MM-dd}-%i.log">-->
<!--            <ThresholdFilter level="error" onMatch="ACCEPT" onMismatch="DENY"/>-->
<!--            <PatternLayout pattern="[%d{HH:mm:ss:SSS}] [%p] - %l - %m%n"/>-->
<!--            <Policies>-->
<!--                <TimeBasedTriggeringPolicy/>-->
<!--                <SizeBasedTriggeringPolicy size="100 MB"/>-->
<!--            </Policies>-->
<!--        </RollingFile>-->
<!--        &lt;!&ndash;定义日志为异步记录&ndash;&gt;-->
<!--        <Async name="async">-->
<!--            <AppenderRef ref="testFile" />-->
<!--        </Async>-->
<!--    </appenders>-->
<!--    &lt;!&ndash;然后定义logger，只有定义了logger并引入的appender，appender才会生效&ndash;&gt;-->
<!--    <loggers>-->
<!--        &lt;!&ndash;过滤掉spring和mybatis的一些无用的DEBUG信息&ndash;&gt;-->
<!--        <logger name="org.springframework" level="INFO"></logger>-->
<!--        <logger name="org.mybatis" level="INFO"></logger>-->
<!--        <root level="all">-->
<!--            <appender-ref ref="Console"/>-->
<!--            <appender-ref ref="RollingFileInfo"/>-->
<!--            <appender-ref ref="RollingFileWarn"/>-->
<!--            <appender-ref ref="RollingFileError"/>-->
<!--            &lt;!&ndash;使用异步appender&ndash;&gt;-->
<!--            <appender-ref ref="async" />-->
<!--        </root>-->
<!--    </loggers>-->
</configuration>